// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Course {
  id              Int       @id @default(autoincrement())
  title           String    @db.VarChar(255)
  description     String    @db.VarChar(255)
  instructor      String    @db.VarChar(255)
  topics          Topic[]
  price           Decimal   @db.Decimal(10, 2)
  thumbnail_image String?   @db.VarChar(255)
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt

  Enrollment      Enrollment[]
}

model Topic {
  name       String    @db.VarChar(255)
  course     Course    @relation(fields: [course_id], references: [id])
  course_id  Int       @id
}

model Module {
  course_id     Int
  title         String    @db.VarChar(255)
  description   String    @db.VarChar(255)
  pdf_content   String?   @db.VarChar(255)
  video_content String?   @db.VarChar(255)
  order         Int       @unique
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
}

model User {
  id            Int      @id @default(autoincrement())
  username      String   @unique @db.VarChar(255)
  email         String   @unique @db.VarChar(255)
  first_name    String   @db.VarChar(255)
  last_name     String   @db.VarChar(255)
  balance       Decimal  @db.Decimal(10, 2) @default(0)
  password_hash String   @db.VarChar(255)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  Enrollment    Enrollment[]
}

model Enrollment {
  id         Int      @id @default(autoincrement())
  user_id    Int
  course_id  Int
  status     String   @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [user_id], references: [id])
  course     Course   @relation(fields: [course_id], references: [id])
}