// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Course {
  id                  String    @id @default(cuid())
  title               String    @db.VarChar(255)
  description         String    @db.VarChar(255)
  instructor          String    @db.VarChar(255)
  topics              Topic[]
  price               Decimal   @db.Decimal(10, 2)
  thumbnail_image     String?   @db.VarChar(255)
  created_at          DateTime  @default(now())
  updated_at          DateTime  @updatedAt
  progress_percentage Int       @default(0)

  enrollment          Enrollment[]
  module              Module[]
}

model Topic {
  id         String    @id @default(cuid())
  name       String    @db.VarChar(255)
  course_id  String
  course     Course    @relation(fields: [course_id], references: [id], onDelete: Cascade)
}

model Module {
  id            String    @id @default(cuid())
  title         String    @db.VarChar(255)
  description   String    @db.VarChar(255)
  pdf_content   String?   @db.VarChar(255)
  video_content String?   @db.VarChar(255)
  order         Int       @unique
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  course        Course    @relation(fields: [course_id], references: [id], onDelete: Cascade)
  course_id     String

  progress      UserModuleProgress[]
}

model User {
  id            String   @id @default(cuid())
  username      String   @unique @db.VarChar(255)
  email         String   @unique @db.VarChar(255)
  first_name    String   @db.VarChar(255)
  last_name     String   @db.VarChar(255)
  balance       Int      @default(0)
  password_hash String   @db.VarChar(255)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  is_admin      Boolean  @default(false)
  enrollment    Enrollment[]

  module_progress  UserModuleProgress[]
}

model Enrollment {
  id                   String   @id @default(cuid())
  user_id              String
  course_id            String
  enrolled_at          DateTime @default(now())

  user                 User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  course              Course   @relation(fields: [course_id], references: [id], onDelete: Cascade)
}

model UserModuleProgress {
  user_id       String
  module_id     String
  is_completed  Boolean  @default(false)

  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  module        Module   @relation(fields: [module_id], references: [id], onDelete: Cascade)
  @@id([user_id, module_id])
}